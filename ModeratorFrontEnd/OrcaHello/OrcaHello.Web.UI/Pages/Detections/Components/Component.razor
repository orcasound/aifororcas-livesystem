@* @if (DetectionItemViews != null && DetectionItemViews.Count() == 0)
{
    <RadzenAlert AllowClose="false"
                 AlertStyle=AlertStyle.Warning
                 Variant=Variant.Flat
                 Shade=Shade.Lighter>
        There are no Detections listed for this timeframe and filtering conditions.
    </RadzenAlert>
}

<LoadingSpinnerComponent IsLoading=@IsLoading />

@if (ViewMode == 0)
{
    <RadzenDataList AllowVirtualization="true"
                    WrapItems="false"
                    AllowPaging="false"
                    LoadData=@LoadData
                    Data=@DetectionItemViews
                    Count=@TotalDetectionCount
                    TItem="DetectionItemView"
                    PageSize="1000"
                    PagerHorizontalAlign=HorizontalAlign.Left
                    ShowPagingSummary="true"
    @ref="DetectionDataList"
                    Style="margin-top:20px;">
        <Template Context="item">
            <RadzenRow Gap="0">
                <RadzenColumn Size="12" SizeXS="6" Style="display:flex; flex-direction: column; justify-content: space-between;">
                    <div>
                        <RadzenRow Gap="0">
                            <RadzenColumn Size="12" SizeXS="12">
                                <RadzenText id="large-only" TextStyle=TextStyle.H3 Text=@item.Id />
                                <RadzenText id="phone-only" TextStyle=TextStyle.Body1><b>@item.Id</b></RadzenText>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow Gap="0" Class="rz-mt-3">
                            <RadzenColumn Size="12" SizeXS="6">
                                <RadzenStack Orientation=Orientation.Horizontal AlignItems=AlignItems.Center>
                                    <RadzenIcon id="tile-icon" Icon="watch_later" IconStyle=IconStyle.Secondary />
                                    <RadzenText id="tile-value" TextStyle=TextStyle.Body1 Text=@item.Timestamp.UTCToPDTFull() />
                                </RadzenStack>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeXS="6">
                                <RadzenStack Orientation=Orientation.Horizontal AlignItems=AlignItems.Center>
                                    <RadzenIcon id="tile-icon" Icon="gps_fixed" IconStyle=IconStyle.Secondary />
                                    <RadzenText id="tile-value" TextStyle=TextStyle.Body1 Text=@item.LocationName />
                                </RadzenStack>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow Gap="0" class="rz-mt-3">
                            <RadzenColumn Size="12" SizeXS="6">
                                <RadzenStack Orientation=Orientation.Horizontal AlignItems=AlignItems.Center>
                                    <RadzenIcon id="tile-icon" Icon="mic" IconStyle=IconStyle.Secondary />
                                    <RadzenText id="tile-value" TextStyle=TextStyle.Body1 Text=@item.DetectionCount />
                                </RadzenStack>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeXS="6">
                                <RadzenStack Orientation=Orientation.Horizontal AlignItems=AlignItems.Center>
                                    <RadzenIcon id="tile-icon" Icon="signal_cellular_alt" IconStyle=IconStyle.Secondary />
                                    <RadzenText id="tile-value" TextStyle=TextStyle.Body1 Text=@item.AverageConfidence />
                                </RadzenStack>
                            </RadzenColumn>
                        </RadzenRow>
                        <AuthorizeView Policy="Moderators">
                            <NotAuthorized>
                                @if (item.State.ToUpper() != DetectionState.Unreviewed.ToString().ToUpper())
                                {
                                    <EditedModeratorFieldsComponent DetectionItemView=@item />
                                }
                            </NotAuthorized>
                        </AuthorizeView>
                    </div>
                    <AuthorizeView Policy="Moderators">
                        <Authorized Context="Auth">
                            <EditableModeratorFieldsComponent Item=@item />
                        </Authorized>
                        <NotAuthorized>
                            <div class="rz-mt-3">
                                <RadzenStack Orientation=Orientation.Horizontal>
                                    <DetectionButtonsComponent />
                                </RadzenStack>
                            </div>
                        </NotAuthorized>
                    </AuthorizeView>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeXS="6">
                    <RadzenImage Path="@item.SpectrogramUri" Style="max-width: 100%;height: 300px;" />
                </RadzenColumn>
            </RadzenRow>
        </Template>
    </RadzenDataList>
}
else
{
    <RadzenDataGrid @ref="DetectionDataGrid"
                    Data=@DetectionItemViews
                    Count=@TotalDetectionCount
                    LoadData=@LoadData
                    TItem="DetectionItemView"
                    AllowVirtualization="true"
                    AllowFiltering="false"
                    AllowRowSelectOnRowClick="true"
                    SelectionMode=DataGridSelectionMode.Multiple
    @bind-Value=selectedDetectionItemViews
                    AllowSorting="false"
                    Style="margin-top:20px;">

        <Columns>
            <RadzenDataGridColumn TItem="DetectionItemView" Width="40px" Sortable="false" Filterable="false">
                <HeaderTemplate>
                    <RadzenCheckBox TriState="false" TValue="bool?"
                                    Value="@(selectedDetectionItemViews == null || selectedDetectionItemViews?.Any() != true ? false : !DetectionItemViews.All(i => selectedDetectionItemViews.Contains(i)) ? null : DetectionItemViews.Any(i => selectedDetectionItemViews.Contains(i)))"
                                    Change="@(args => selectedDetectionItemViews = args == true ? DetectionItemViews.ToList() : null)" />
                </HeaderTemplate>
                <Template Context="data">
                    <RadzenCheckBox TriState="false" Value="@(selectedDetectionItemViews != null && selectedDetectionItemViews.Contains(data))"
                                    TValue="bool" Change=@(args => { if(!true) { DetectionDataGrid.SelectRow(data); }}) />
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DetectionItemView" Property="Id" Title="Candidate ID" />
            <RadzenDataGridColumn TItem="DetectionItemView" Property="Timestamp" Title="Timestamp" Width="140px;">
                <Template Context="data">
                    <RadzenText Text=@(data.Timestamp.UTCToPDT()) />
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DetectionItemView" Property="LocationName" Title="Location" Width="200px;" />
            <RadzenDataGridColumn TItem="DetectionItemView" Property="Annotations" Title="Detections" Width="90px;">
                <Template Context="data">
                    <RadzenText Text=@(data.Annotations.Count().ToString()) />
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DetectionItemView" Property="SmallConfidence" Title="Confidence" Width="95px;" />
            <RadzenDataGridColumn TItem="DetectionItemView" Title="Spectrogram">
                <Template Context="data">
                    <RadzenImage Path="@data.SpectrogramUri" Style="width:200px; height: 36px;" />
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DetectionItemView" Property="State" Title="Call" />
            <RadzenDataGridColumn TItem="DetectionItemView" Property="Tags" Title="Tags" />
            <RadzenDataGridColumn TItem="DetectionItemView" Property="Comments" Title="Comments" />
        </Columns>

    </RadzenDataGrid>
}
 *@