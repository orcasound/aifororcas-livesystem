@page "/orca_sounds/{Id}"
@layout EmptyLayout
@inherits ComponentManager

<RadzenLayout Style="height:calc(100%);">
    <RadzenBody>

        <PageHeaderComponent Title=@($"ID: {Id}") />

        <LoadingSliderComponent IsLoading=@IsLoading />

        @if (ItemView != null)
        {
            <RadzenText Text="Metadata" TextStyle=TextStyle.H3 class="mt-3" />

            <RadzenRow Gap="0" Class="rz-mt-3">
                <RadzenColumn Size="12" SizeSM="3">
                    <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                        <RadzenLabel Text="Datetime Collected" Style="color: var(--rz-secondary);" />
                        <RadzenText TextStyle=TextStyle.H4 class="ms-3" Text=@ItemView.Timestamp.UTCToPDTFull() />
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeSM="3">
                    <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                        <RadzenLabel Text="SRKW Found?" Style="color: var(--rz-secondary);" />
                        <RadzenText TextStyle=TextStyle.H4 class="ms-3" Text=@ItemView.StateString />
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>

            <RadzenRow Gap="0" Class="rz-mt-3">
                <RadzenColumn Size="12" SizeSM="3">
                    <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                        <RadzenLabel Text="Location" Style="color: var(--rz-secondary);" />
                        <RadzenText TextStyle=TextStyle.H4 class="ms-3" Text=@ItemView.FullLocation />
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>

            <RadzenRow Gap="0" Class="rz-mt-3">
                <RadzenColumn Size="12" SizeSM="3">
                    <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                        <RadzenLabel Text="Detections" Style="color: var(--rz-secondary);" />
                        <RadzenText TextStyle=TextStyle.H4 class="ms-3" Text=@ItemView.Annotations.Count.ToString() />
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn Size="12" SizeSM="3">
                    <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                        <RadzenLabel Text="Average Confidence" Style="color: var(--rz-secondary);" />
                        <RadzenText TextStyle=TextStyle.H4 class="ms-3" Text=@ItemView.SmallConfidence />
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>

            if (ItemView.State != DetectionState.Unreviewed.ToString())
            {
                <RadzenText Text="Moderated Information" TextStyle=TextStyle.H3 class="mt-3" />

                <RadzenRow Gap="0" Class="rz-mt-3">
                    <RadzenColumn Size="12" SizeSM="3">
                        <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                            <RadzenLabel Text="Moderator" Style="color: var(--rz-secondary);"/>
                            <RadzenText TextStyle=TextStyle.H4 class="ms-3" Text=@ItemView.Moderator />
                        </RadzenStack>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeSM="3">
                        <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                            <RadzenLabel Text="Date Moderated" Style="color: var(--rz-secondary);" />
                            <RadzenText TextStyle=TextStyle.H4 class="ms-3" Text=@ItemView.Moderated.Value.UTCToPDTFull() />
                        </RadzenStack>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow Gap="0" class="rz-mt-3">
                    <RadzenColumn Size="12">
                        <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                            <RadzenLabel Text="Tags" Style="color: var(--rz-secondary);" />
                            <RadzenText TextStyle=TextStyle.H4 class="ms-3" Text=@ItemView.Tags />
                        </RadzenStack>
                    </RadzenColumn>
                </RadzenRow>

                <RadzenRow Gap="0" class="rz-mt-3">
                    <RadzenColumn Size="12">
                        <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                            <RadzenLabel Text="Comments" Style="color: var(--rz-secondary);" />
                            <RadzenText TextStyle=TextStyle.H4 class="ms-3 rz-text-wrap" Text=@ItemView.Comments />
                        </RadzenStack>
                    </RadzenColumn>
                </RadzenRow>
            }

            <RadzenText Text="Links" TextStyle=TextStyle.H3 class="mt-3" />

            <RadzenRow Gap="0" class="rz-mt-3">
                <RadzenColumn Size="12">
                    <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                        <RadzenLabel Text="To This Record" Style="color: var(--rz-secondary);" />
                        <RadzenLink Path=@LinkUrl Text=@LinkUrl class="ms-3 rz-text-break"  Style="font-size: 1.143rem;" />
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>

            <RadzenRow Gap="0" class="rz-mt-3">
                <RadzenColumn Size="12">
                    <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                        <RadzenLabel Text="To Audio File" Style="color: var(--rz-secondary);" />
                        <RadzenLink Path=@ItemView.AudioUri Text=@ItemView.AudioUri class="ms-3 rz-text-break" Style="font-size: 1.143rem;" />
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>

            <RadzenRow Gap="0" class="rz-mt-3">
                <RadzenColumn Size="12">
                    <RadzenStack Orientation=Orientation.Vertical AlignItems=AlignItems.Start>
                        <RadzenLabel Text="To Spectrogram" Style="color: var(--rz-secondary);" />
                        <RadzenLink Path=@ItemView.SpectrogramUri Text=@ItemView.SpectrogramUri class="ms-3 rz-text-break" Style="font-size: 1.143rem;" />
                    </RadzenStack>
                </RadzenColumn>
            </RadzenRow>

            <RadzenText Text="Spectrogram" TextStyle=TextStyle.H3 class="mt-3" />

            <RadzenRow Gap="0" class="rz-mt-3"> 
                <RadzenColumn>
                    <img class="img-fluid"
                         src=@ItemView.SpectrogramUri />
@*                     <div class="card-img-overlay p-0">
                        <div id=@ModalWaveformId class="d-block"></div>
                    </div> *@
                </RadzenColumn>
            </RadzenRow>

            <RadzenText Text="Map" TextStyle=TextStyle.H3 class="mt-3" />

            <RadzenRow class="ms-3">
                <RadzenColumn Size="12" SizeSM="6">
                    <SmallMapComponent Longitude=@ItemView.Location.Longitude Latitude=@ItemView.Location.Latitude />
                </RadzenColumn>
            </RadzenRow>
        }
    </RadzenBody>
</RadzenLayout>


@*                 <div class="form-group">
                    <label class="col-form-label-lg">Link to This Record:</label>
                    <div>
                        <a class="h5 text-break" data-dismiss="modal" href="@LinkUrl"
                           @onclick="@(async () => await ActivateLink(LinkUrl))">@LinkUrl</a>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-form-label-lg">Link to Audio File:</label>
                    <div>
                        <a class="h5 text-break" href="@Detection.AudioUri"
                           target="_blank">@Detection.AudioUri</a>
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-form-label-lg">Link to Spectrogram:</label>
                    <div>
                        <a class="h5 text-break" href="@Detection.SpectrogramUri"
                           target="_blank">@Detection.SpectrogramUri</a>
                    </div>
                </div>
            </div>

                               private async Task ActivateLink(string url)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        NavigationManager.NavigateTo(url, true);
    }

    private string LinkUrl { get => $"{NavigationManager.BaseUri}detections/detection/{Detection.Id}"; } *@